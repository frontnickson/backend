const mongoose = require('mongoose');
require('dotenv').config();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/toolrole');
    console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
    process.exit(1);
  }
};

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
const Profession = require('./src/models/Profession');
const ProfessionTask = require('./src/models/ProfessionTask');
const { graphicDesignerTasks } = require('./tasks-data');

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –¥–∏–∑–∞–π–Ω–µ—Ä–∞
const createGraphicDesignerProfession = async () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è
    const existingProfession = await Profession.findOne({ slug: 'graphic-designer' });
    if (existingProfession) {
      console.log('üìù –ü—Ä–æ—Ñ–µ—Å—Å–∏—è "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      return existingProfession;
    }

    const profession = new Profession({
      name: '–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä',
      slug: 'graphic-designer',
      description: '–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –±—Ä–µ–Ω–¥–æ–≤, —Ä–µ–∫–ª–∞–º—ã, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –∏ –ø–µ—á–∞—Ç–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏. –†–∞–±–æ—Ç–∞ —Å —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–æ–π, —Ü–≤–µ—Ç–æ–º, –∫–æ–º–ø–æ–∑–∏—Ü–∏–µ–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–∏–∑–∞–π–Ω-—Ç—Ä–µ–Ω–¥–∞–º–∏.',
      shortDescription: '–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –±—Ä–µ–Ω–¥–æ–≤ –∏ —Ä–µ–∫–ª–∞–º—ã',
      category: 'design',
      level: 'all',
      icon: 'üé®',
      color: '#FF6B6B',
      requiredSkills: [
        'Adobe Photoshop',
        'Adobe Illustrator', 
        'Adobe InDesign',
        'Figma',
        '–¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞',
        '–¶–≤–µ—Ç–æ–≤–µ–¥–µ–Ω–∏–µ',
        '–ö–æ–º–ø–æ–∑–∏—Ü–∏—è',
        '–ë—Ä–µ–Ω–¥–∏–Ω–≥'
      ],
      recommendedSkills: [
        'Adobe After Effects',
        'Sketch',
        'Principle',
        'HTML/CSS',
        '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
        '–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è'
      ],
      tools: [
        'Adobe Creative Suite',
        'Figma',
        'Sketch',
        'Canva Pro',
        'Unsplash',
        'Freepik'
      ],
      statistics: {
        totalTasks: 100,
        averageTaskTime: 4,
        difficulty: 6,
        popularity: 95
      },
      isActive: true,
      isPublic: true,
      isFeatured: true,
      createdBy: new mongoose.Types.ObjectId(),
      updatedBy: new mongoose.Types.ObjectId()
    });

    await profession.save();
    console.log('‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏—è "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä" —Å–æ–∑–¥–∞–Ω–∞');
    return profession;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:', error);
    throw error;
  }
};

// –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –¥–∏–∑–∞–π–Ω–µ—Ä–∞
const createGraphicDesignerTasks = async (professionId) => {
  const tasks = graphicDesignerTasks.map(task => ({
    ...task,
    professionId,
    createdBy: new mongoose.Types.ObjectId(),
    updatedBy: new mongoose.Types.ObjectId()
  }));

  try {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è —ç—Ç–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    await ProfessionTask.deleteMany({ professionId });
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏');

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
    for (let i = 0; i < tasks.length; i++) {
      const task = new ProfessionTask(tasks[i]);
      await task.save();
      console.log(`‚úÖ –ó–∞–¥–∞—á–∞ ${i + 1}/${tasks.length} —Å–æ–∑–¥–∞–Ω–∞: ${task.title}`);
    }

    console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${tasks.length} –∑–∞–¥–∞—á –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä"`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á:', error);
    throw error;
  }
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
const seedProfessions = async () => {
  try {
    await connectDB();
    
    console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏—é
    const profession = await createGraphicDesignerProfession();
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏
    await createGraphicDesignerTasks(profession._id);
    
    console.log('üéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
seedProfessions();
