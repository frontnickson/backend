const express = require('express');
const router = express.Router();
const authController = require('../controllers/authController');

console.log('üîê Routes auth.js: –∑–∞–≥—Ä—É–∂–∞–µ–º middleware authenticate');
const { authenticate } = require('../middleware/auth');
console.log('üîê Routes auth.js: middleware authenticate –∑–∞–≥—Ä—É–∂–µ–Ω:', typeof authenticate);

const { validateRegistration, validateLogin, validatePasswordChange } = require('../validation/authValidation');

/**
 * @route   POST /api/v1/auth/check-email
 * @desc    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è email
 * @access  Public
 */
router.post('/check-email', authController.checkEmailExists);

/**
 * @route   POST /api/v1/auth/check-username
 * @desc    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è username
 * @access  Public
 */
router.post('/check-username', authController.checkUsernameExists);

/**
 * @route   POST /api/v1/auth/register
 * @desc    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @access  Public
 */
router.post('/register', validateRegistration, authController.register);

/**
 * @route   POST /api/v1/auth/login-email
 * @desc    –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É –ø–æ email –∏ –ø–∞—Ä–æ–ª—é
 * @access  Public
 */
router.post('/login-email', validateLogin, authController.login);

/**
 * @route   POST /api/v1/auth/logout
 * @desc    –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
 * @access  Private
 */
router.post('/logout', authenticate, authController.logout);

/**
 * @route   POST /api/v1/auth/refresh
 * @desc    –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–∞
 * @access  Public
 */
router.post('/refresh', authController.refreshToken);

/**
 * @route   GET /api/v1/auth/me
 * @desc    –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @access  Private
 */
router.get('/me', authenticate, authController.getCurrentUser);

/**
 * @route   GET /api/v1/auth/test
 * @desc    –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * @access  Public
 */
router.get('/test', (req, res) => {
  console.log('üîê –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –≤—ã–∑–≤–∞–Ω!');
  res.json({ message: '–¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!' });
});

/**
 * @route   POST /api/v1/auth/change-password
 * @desc    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
 * @access  Private
 */
router.post('/change-password', authenticate, validatePasswordChange, authController.changePassword);

/**
 * @route   POST /api/v1/auth/forgot-password
 * @desc    –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
 * @access  Public
 */
router.post('/forgot-password', authController.forgotPassword);

/**
 * @route   POST /api/v1/auth/reset-password
 * @desc    –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –ø–æ —Ç–æ–∫–µ–Ω—É
 * @access  Public
 */
router.post('/reset-password', authController.resetPassword);

module.exports = router;
